plugins {
    id 'java'
//    id 'war'
}

group = "by.nata"
version = "1.0-SNAPSHOT"

java {
    sourceCompatibility = JavaVersion.VERSION_17
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenLocal()
    mavenCentral()
    maven {
        url "https://mvnrepository.com/artifact/org.testcontainers"
    }
}

ext {
    junitVersion = '5.10.0'
    lombokVersion = '1.18.26'
    mockitoVersion = '5.5.0'
    testcontainersVersion = '1.19.1'
    mapstructVersion = '1.5.5.Final'
}

dependencies {
    annotationProcessor "org.projectlombok:lombok:$lombokVersion"
    compileOnly "org.projectlombok:lombok:$lombokVersion"
    implementation 'jakarta.persistence:jakarta.persistence-api:3.1.0'
    implementation group: 'org.yaml', name: 'snakeyaml', version: '1.27'
    implementation 'org.apache.logging.log4j:log4j-core:2.18.0'
    implementation 'org.apache.logging.log4j:log4j-api:2.18.0'

    implementation 'c3p0:c3p0:0.9.1.2'
    implementation 'org.postgresql:postgresql:42.6.0'

    implementation 'org.quartz-scheduler:quartz:2.3.2'
    implementation "org.mapstruct:mapstruct:$mapstructVersion"
    annotationProcessor "org.mapstruct:mapstruct-processor:$mapstructVersion"
    implementation 'javax.servlet:javax.servlet-api:4.0.1'

    testImplementation "org.junit.jupiter:junit-jupiter-api:$junitVersion"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junitVersion"
    testImplementation "org.mockito:mockito-core:$mockitoVersion"
    testImplementation "org.mockito:mockito-junit-jupiter:$mockitoVersion"
    testImplementation "org.testcontainers:testcontainers:$testcontainersVersion"
    testImplementation "org.testcontainers:junit-jupiter:$testcontainersVersion"
    testImplementation "org.testcontainers:postgresql:$testcontainersVersion"
    testImplementation 'org.assertj:assertj-core:3.24.2'
}

jar {
    def jars = configurations.runtimeClasspath.files.collect { "lib/$it.name" }

    manifest {
        attributes 'Main-Class': 'by.nata.Main',
                'Class-Path': jars.join(' ')
    }
}

tasks.register('copyAllDependencies', Copy) {
    from(configurations.runtimeClasspath.files)
    into("$buildDir/libs/lib")
}

jar.dependsOn copyAllDependencies

tasks.test {
    useJUnitPlatform()
    exclude '**/by/nata/service/AccountServiceIntegrationTest.class'
}